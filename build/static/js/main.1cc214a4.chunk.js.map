{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","alt","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAuBeA,G,MAnBCC,sBAAW,WAAwBC,GAAS,IAA9BC,EAA6B,EAA7BA,QACpBC,EADiD,EAApBC,WACPF,EAAQE,SACpC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,qBAAhD,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHd,WAKMR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,KALL,IAK2DF,EAAQA,qB,QCDxEU,EAZKC,IAASC,cAAc,CACtCC,OAAQ,0CACXC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAGMC,Y,iCCsDRC,MAvDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGmBJ,mBAAS,IAH5B,mBAGNpB,EAHM,KAGIyB,EAHJ,KA6Bb,OAxBAC,qBAAU,WACRlB,EAAGmB,WAAW,YACbC,QAAQ,YAAY,QACpBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAAEC,GAAID,EAAIC,GAAIpC,QAASmC,EAAIE,iBAElE,IAEHT,qBAAU,WACRD,EAAYW,OAAO,6BAClB,IAeD,sBAAKnC,UAAU,MAAf,UACE,qBAAKoC,IAAI,2GAA2GC,IAAI,mBACxH,kDACA,0CAAatC,KAEb,sBAAMC,UAAU,YAAhB,SACE,eAACsC,EAAA,EAAD,CAAatC,UAAU,mBAAvB,UACE,cAACuC,EAAA,EAAD,CAAOvC,UAAU,aAAawC,YAAY,qBAAqBC,MAAOrB,EAAOsB,SAAU,SAACC,GAAD,OAAWtB,EAASsB,EAAMC,OAAOH,UACxH,cAACI,EAAA,EAAD,CAAY7C,UAAU,kBAAkBK,QAAQ,OAAOD,MAAM,UAAU0C,UAAW1B,EAAO2B,QArB7E,SAACJ,GACnBA,EAAMK,iBAENzC,EAAGmB,WAAW,YAAYuB,IAAI,CAC5BpD,QAASuB,EACTrB,SAAUA,EACVmD,UAAW1C,IAASS,UAAUkC,WAAWC,oBAG3C/B,EAAS,KAY4GgC,KAAK,SAApH,SACE,cAAC,IAAD,WAKN,cAAC,IAAD,UAEI/B,EAASS,KAAI,gBAAGE,EAAH,EAAGA,GAAIpC,EAAP,EAAOA,QAAP,OACX,cAAC,EAAD,CAAkBA,QAASA,EAASE,SAAUA,GAAhCkC,YC9CXqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1cc214a4.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React, { forwardRef } from 'react'\r\nimport './Message.css'\r\n\r\nconst Message = forwardRef(({ message, username }, ref) => {\r\n    const isUser = username === message.username\r\n    return (\r\n        <div ref={ref} className={`message ${isUser && 'message__user'}`} >\r\n            <Card className={isUser ? 'message__userCard' : 'message__guestCard'}>\r\n                <CardContent>\r\n                    <Typography\r\n                        color='white'\r\n                        variant='h6'\r\n                        component='h2'\r\n                    >\r\n                        {!isUser && `${message.username || 'Unknown user'}:`} {message.message}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message","import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n     apiKey: \"AIzaSyB-TkUwF_thk93OtKjom8Ufro9O0wOeeO0\",\r\n  authDomain: \"facebook-messenger-clone-8d2fc.firebaseapp.com\",\r\n  projectId: \"facebook-messenger-clone-8d2fc\",\r\n  storageBucket: \"facebook-messenger-clone-8d2fc.appspot.com\",\r\n  messagingSenderId: \"29497761745\",\r\n  appId: \"1:29497761745:web:b212e615afe682f0000af0\",\r\n  measurementId: \"G-9RRY15Y3X2\"\r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\n\r\nexport default db;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { FormControl,  Input } from '@material-ui/core'\nimport Message from './Message';\nimport db from './firebase'\nimport firebase from 'firebase'\nimport FlipMove from 'react-flip-move'\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton'\n\n\nfunction App() {\n  const [input, setInput] = useState('')\n  const [messages, setMessages] = useState([])\n  const [username, setUsername] = useState('')\n\n  useEffect(() => {\n    db.collection('messages')\n    .orderBy('timestamp','desc')\n    .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({ id: doc.id, message: doc.data() })))\n    })\n  }, [])\n\n  useEffect(() => {\n    setUsername(prompt('Please enter your name'))\n  }, [])\n\n  const sendMessage = (event) => {\n    event.preventDefault()\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    setInput('')\n  }\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=100&h=100\" alt=\"messenger logo\" />\n      <hhi>MESSENGER CLONE</hhi>\n      <h2>Welcome {username}</h2>\n\n      <form className='app__form' >\n        <FormControl className='app__formControl' >\n          <Input className='app__input' placeholder='Enter a message...' value={input} onChange={(event) => setInput(event.target.value)} />\n          <IconButton className='app__iconButton' variant='text' color='primary' disabled={!input} onClick={sendMessage} type=\"submit\" >\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n\n      <FlipMove>\n        {\n          messages.map(({ id, message }) => (\n            <Message key={id} message={message} username={username} />\n          ))\n        }\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}